<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初始css_1</title>
      <link href="/2022/04/15/%E7%9B%92%E6%A8%A1%E5%9E%8B/"/>
      <url>/2022/04/15/%E7%9B%92%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h1><h2 id="1-认识盒模型"><a href="#1-认识盒模型" class="headerlink" title="#1. 认识盒模型"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_1-%E8%AE%A4%E8%AF%86%E7%9B%92%E6%A8%A1%E5%9E%8B">#</a>1. 认识盒模型</h2><p>在HTML中，标签都是一个长方形模型，他们包含有内容区（content）、内填充（padding）、边框（border）、外边距（margin），这些特性和日常生活中常见盒子比较相似，所以我们称之为盒模型。每一个HTML标签都可以看做一个盒子。</p><h2 id="2-相关的css属性"><a href="#2-相关的css属性" class="headerlink" title="#2. 相关的css属性"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_2-%E7%9B%B8%E5%85%B3%E7%9A%84css%E5%B1%9E%E6%80%A7">#</a>2. 相关的css属性</h2><p>盒模型示意图：</p><p><img src="http://static.zzhitong.com/lesson-files/html/img/4-1.png" alt="img"></p><p>按照盒子从里到外的顺序来学习：</p><h3 id="内容区"><a href="#内容区" class="headerlink" title="#内容区"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%86%85%E5%AE%B9%E5%8C%BA">#</a>内容区</h3><p>放置内容的部分，可以由盒子中的内容撑开，或者设置 <strong><code>width height</code></strong> 属性来指定固定的大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red; <span class="comment">/*添加背景色以便于观察*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内填充"><a href="#内填充" class="headerlink" title="#内填充"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%86%85%E5%A1%AB%E5%85%85">#</a>内填充</h3><p>相当于内容四周的填充物（例如：泡沫、报纸、气垫等），CSS属性里面称之为内边距**<code>padding</code>**；</p><p>padding属性接收长度值或百分比值，但是不接收负值：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">10px</span>;   <span class="comment">/*上内边距*/</span></span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">5px</span>;  <span class="comment">/*右内边距*/</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">5px</span>; <span class="comment">/*下内边距*/</span></span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">5px</span>;    <span class="comment">/*左内边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>padding属性可以使用一个属性表示四个方位的值，接收的值个数不同意思不同：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* case 1 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">padding</span>: <span class="number">10px</span>; &#125; <span class="comment">/* 上下左右 全部10px */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* case 2 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">5px</span>; &#125; <span class="comment">/* 上下 10px    左右 5px */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* case 3 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">5px</span> <span class="number">7px</span>; &#125; <span class="comment">/* 上 10px    左右 5px    下 7px */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* case 4 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">9px</span> <span class="number">8px</span> <span class="number">7px</span> ; &#125; <span class="comment">/* 上 10px  右 9px  下 8px  左 7px */</span></span><br></pre></td></tr></table></figure><p>内边距部分会显示盒子背景；</p><p>内边距会撑大盒子的整体大小，但是不会影响内容的大小；</p><p>这种一个属性有很多子属性的我们称之为<strong>复合属性</strong>。</p><h3 id="边框"><a href="#边框" class="headerlink" title="#边框"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E8%BE%B9%E6%A1%86">#</a>边框</h3><p>相当于盒子的包装本身，CSS属性里面称之为**<code>border</code>**，是包裹在padding外层的东西；</p><p>可由统一的border属性来规定边框大小：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*三个值分别表示： 四周边框大小   边框线类型   边框线颜色 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">border</span>: <span class="number">5px</span> solid red; &#125; </span><br></pre></td></tr></table></figure><p>边框线类型：(常用的需要记的，已用斜体标出)</p><blockquote><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><em>none</em></td><td><em>定义无边框。</em></td></tr><tr><td><em>solid</em></td><td><em>定义实线。</em></td></tr><tr><td><em>dotted</em></td><td><em>定义点状边框。在大多数浏览器中呈现为实线。</em></td></tr><tr><td><em>dashed</em></td><td><em>定义虚线。在大多数浏览器中呈现为实线。</em></td></tr><tr><td>double</td><td>定义双线。双线的宽度等于 border-width 的值。</td></tr><tr><td>hidden</td><td>与 “none” 相同。不过应用于表时除外，对于表，hidden 用于解决边框冲突。</td></tr><tr><td>groove</td><td>定义 3D 凹槽边框。其效果取决于 border-color 的值。</td></tr><tr><td>ridge</td><td>定义 3D 垄状边框。其效果取决于 border-color 的值。</td></tr><tr><td>inset</td><td>定义 3D inset 边框。其效果取决于 border-color 的值。</td></tr><tr><td>outset</td><td>定义 3D outset 边框。其效果取决于 border-color 的值。</td></tr><tr><td>inherit</td><td>规定应该从父元素继承边框样式。</td></tr></tbody></table></blockquote><p>border也可由分解属性表示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">10px</span> solid red;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">5px</span> solid red;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">7px</span> solid red;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">8px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可进一步分解为border-width、border-style、border-color</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* case 1 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid; </span><br><span class="line">  <span class="attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* case 2 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border-top-width</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-top-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-top-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="外边距"><a href="#外边距" class="headerlink" title="#外边距"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%A4%96%E8%BE%B9%E8%B7%9D">#</a>外边距</h3><p>相当于盒子和其他盒子之间的间距，CSS属性里面称之为**<code>margin</code>**；</p><p>外边距是在边框外层的，不会显示盒子的背景；</p><p>margin属性的值和padding很类似，演示一下~</p><p>margin允许负值；</p><p>margin多了左右的<strong>auto</strong>值，可以用来将盒子在父级中左右居中；</p><h2 id="3-怪异和盒模型"><a href="#3-怪异和盒模型" class="headerlink" title="#3. 怪异和盒模型"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_3-%E6%80%AA%E5%BC%82%E5%92%8C%E7%9B%92%E6%A8%A1%E5%9E%8B">#</a>3. 怪异和盒模型</h2><p>怪异盒模型和标准盒模型的区别在于，width、height所包含的部分不同。标准盒模型width和height只表示content内容区。而怪异盒模型的width、height包含content、padding和border部分。</p><p>我们可以使用 <code>box-sizing</code> 属性来指定盒模型类型：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*标准盒模型*/</span></span><br><span class="line"><span class="selector-class">.div1</span>&#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: content-box; <span class="comment">/*标准盒模型，默认值*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid green;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*怪异盒模型*/</span></span><br><span class="line"><span class="selector-class">.div2</span>&#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box; <span class="comment">/*开启怪异盒模型*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid green;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-外边距合并"><a href="#4-外边距合并" class="headerlink" title="#4. 外边距合并"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_4-%E5%A4%96%E8%BE%B9%E8%B7%9D%E5%90%88%E5%B9%B6">#</a>4. 外边距合并</h2><p>在某些特定情况下，两个盒子之间的上下外边距会合并：</p><ul><li><p>兄弟元素之间外边距合并</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>父子元素之间上外边距合并</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.wrap</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*当父元素top方向添加border或padding，不会合并*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*border-top: 1px solid blue;*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*padding-top: 10px;*/</span></span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.child</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5-overflow"><a href="#5-overflow" class="headerlink" title="#5. overflow"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_5-overflow">#</a>5. overflow</h2><p>overflow属性可以规定盒子超出部分的显示方式</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>visible</td><td>默认值。内容不会被修剪，会呈现在元素框之外。</td></tr><tr><td>hidden</td><td>超出部分被隐藏。</td></tr><tr><td>scroll</td><td>内容不会超出盒子，但是始终会显示滚动条。</td></tr><tr><td>auto</td><td>只有当内容超出盒子时，才显示滚动条，不超出则没有滚动条。</td></tr><tr><td>inherit</td><td>继承父级 overflow 属性的值。</td></tr></tbody></table><h2 id="6-默认样式"><a href="#6-默认样式" class="headerlink" title="#6. 默认样式"></a><a href="https://kejian.zzhitong.com/md/html/04-%E7%9B%92%E6%A8%A1%E5%9E%8B%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_6-%E9%BB%98%E8%AE%A4%E6%A0%B7%E5%BC%8F">#</a>6. 默认样式</h2><p>HTML中有很多标签有默认的边距或其他样式，其目的是当没有写css样式的时候，让布局看起来不至于很糟糕。</p><p>但是当我们需要按照设计图来写网页时，这些默认样式会干扰我们，所以我们需要清除掉。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* case 1   最省事，但是最不推荐 */</span></span><br><span class="line">*&#123; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">list-style</span>:none; <span class="attribute">border</span>:none;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* case 2   相对繁琐，但是是较好选择 */</span></span><br><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dd</span>,<span class="selector-tag">p</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-tag">ol</span>,<span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">list-style</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:none;&#125;</span><br></pre></td></tr></table></figure><p><strong>case 3</strong>更好的选择：引入一个单独的<a href="http://static.zzhitong.com/lesson-files/html/code/reset.css">初始化样式文件 (opens new window)</a>，<a href="http://necolas.github.io/normalize.css/">这是一个更详细的初始化样式文件 (opens new window)</a>。</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初始css</title>
      <link href="/2022/04/15/%E5%88%9D%E5%A7%8Bcss/"/>
      <url>/2022/04/15/%E5%88%9D%E5%A7%8Bcss/</url>
      
        <content type="html"><![CDATA[<h1 id="css基础知识"><a href="#css基础知识" class="headerlink" title="css基础知识"></a>css基础知识</h1><h2 id="1-认识css"><a href="#1-认识css" class="headerlink" title="#1. 认识css"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_1-%E8%AE%A4%E8%AF%86css">#</a>1. 认识css</h2><h3 id="概念"><a href="#概念" class="headerlink" title="#概念"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E6%A6%82%E5%BF%B5">#</a>概念</h3><ul><li>CSS(英文全称：Cascading Style Sheets)，层叠样式表。它是网页的装饰者，用来修饰各标签排版（大小、边距、背景、位置等）、改变字体的样式（字体大小、字体颜色、对齐方式等）、设置图片（宽高、位置等）等。</li><li>CSS以HTML为基础，提供了丰富的功能，如字体、颜色、背景的控制及整体排版等，而且还可以针对不同的浏览器设置不同的样式。</li><li><strong>CSS可以帮助调整排版布局的展现 美化标签和内容 提高版面的信息密度 加强信息的冲击力和直观性</strong></li></ul><h3 id="写在哪"><a href="#写在哪" class="headerlink" title="#写在哪"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%86%99%E5%9C%A8%E5%93%AA">#</a>写在哪</h3><p>css代码分为<strong>内部样式、外部样式、行内样式</strong>三种写法。</p><ul><li><p>内部样式</p><p>写在HTML文档的<code>style</code>标签中，style通常放置于头部：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*这里写css代码*/</span></span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>style标签可以加上<code>type=&quot;text/css&quot;</code>这条属性，用于告诉浏览器这里是什么格式的代码，但是在HTML5规范中可以不用写。</p></li><li><p>外部样式</p><p>单独创建<code>.css</code>后缀的文件，然后通过link标签引入，link通常放置于头部：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;CSS文件的路径&quot;</span>  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><span class="comment">&lt;!--定义一个外部加载的样式表--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>行内样式&#x2F;内联样式</p><p>直接写在标签属性中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;css代码&quot;</span>&gt;</span>段落文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>三种方式比较</p><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th align="left">使用场景</th></tr></thead><tbody><tr><td>行内样式表</td><td>书写方便，权重高</td><td>没有实现结构与样式分离，不便于维护，不可以重复利用</td><td>极少</td><td align="left">某个标签需要单独的样式设置时使用</td></tr><tr><td>内部样式表</td><td>部分结构与样式分离，较便于维护</td><td>没有彻底实现结构与样式分离，不可以重复利用</td><td>一般</td><td align="left">css代码量不多，且和当前页面联系紧密不需要复用时使用</td></tr><tr><td>外部样式表</td><td>完全实现结构与样式分离，可重复利用</td><td>如果代码量较少情况下，引入法更麻烦</td><td>最多，推荐</td><td align="left">css代码量大时，或者需要重复利用时使用</td></tr></tbody></table></li></ul><h3 id="如何写"><a href="#如何写" class="headerlink" title="#如何写"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%A6%82%E4%BD%95%E5%86%99">#</a>如何写</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选择器&#123;属性:值;属性:值;&#125;*/</span></span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">规范：</span></span><br><span class="line"><span class="comment">值以分号结束</span></span><br><span class="line"><span class="comment">推荐换行书写，可读性更强</span></span><br><span class="line"><span class="comment">推荐 值 与 : 号之间加空格，可读性更强</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="2-选择器初级"><a href="#2-选择器初级" class="headerlink" title="#2. 选择器初级"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_2-%E9%80%89%E6%8B%A9%E5%99%A8%E5%88%9D%E7%BA%A7">#</a>2. 选择器初级</h2><h3 id="id与class命名"><a href="#id与class命名" class="headerlink" title="#id与class命名"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#id%E4%B8%8Eclass%E5%91%BD%E5%90%8D">#</a>id与class命名</h3><ul><li>id命名唯一，单个标签不允许拥有多个id名，同页面中不存出现重复的id名（id重名会影响js代码获取标签）</li><li>class命名不唯一，单个标签可以拥有多个class名，不同标签允许使用相同class名</li><li>命名规范<ul><li>允许 *大写字母 小写字母 数字 -*，必须以字母开头，单词一般小写；</li><li>见名知意，不允许单个字母做名字，各命名词汇英文参考：<a href="https://www.baidu.com/s?wd=html%E5%B8%B8%E7%94%A8%E5%91%BD%E5%90%8D%E5%8D%95%E8%AF%8D">命名词汇 (opens new window)</a>；</li><li>单词之间使用-号连词或者驼峰连词，具体看公司整体规范；</li><li>单词不要简写过渡，可以不影响理解的前提下简写。</li></ul></li></ul><h3 id="选择器分类（初级版）"><a href="#选择器分类（初级版）" class="headerlink" title="#选择器分类（初级版）"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E9%80%89%E6%8B%A9%E5%99%A8%E5%88%86%E7%B1%BB-%E5%88%9D%E7%BA%A7%E7%89%88">#</a>选择器分类（初级版）</h3><ul><li><p>id选择器</p><p>eg：<code>#wrap</code>，选中id名为wrap的标签。</p></li><li><p>class选择器</p><p>eg：<code>.nav</code>，选中所有class名为nav的标签。</p></li><li><p>标签选择器</p><p>eg：<code>p</code>，选中所有p标签。</p></li><li><p>后代选择器</p><p>eg：<code>#wrap .nav</code>，选中#wrap标签中所有拥有nav类名的<strong>后代</strong>标签。</p></li><li><p>通配选择符</p><p>eg：<code>*</code>，选中页面中所有元素</p></li></ul><h3 id="选择器权重"><a href="#选择器权重" class="headerlink" title="#选择器权重"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E9%80%89%E6%8B%A9%E5%99%A8%E6%9D%83%E9%87%8D">#</a>选择器权重</h3><p>如果 同一个标签 被 多个选择器 赋予了 相同 的属性且值不一样时，会按照选择器的优先级来决定以哪个样式为准，比如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*css代码*/</span></span><br><span class="line"><span class="selector-class">.info</span>&#123;<span class="attribute">color</span>: green;&#125;</span><br><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: red;&#125;</span><br><span class="line">&lt;!<span class="attr">--HTML</span>代码--&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;info&quot;&gt;段落文字&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p>此时<code>.info</code>和<code>p</code>都选中了这个p标签，并且两者规定了不同的字体颜色，那么最终显示出的颜色就要根据选择器的优先级来决定。</p><ul><li>!important &gt; 行内 &gt; id &gt; class|属性|伪类 &gt; 标签 &gt; 通配符|兄弟|相邻兄弟|子代 &gt; 继承</li><li>先比较级别，级别一样比较各级别选择器出现的次数</li><li>当两个选择器权重一样时，以最后出现的为准</li></ul><h2 id="3-基础知识介绍"><a href="#3-基础知识介绍" class="headerlink" title="#3. 基础知识介绍"></a><a href="https://kejian.zzhitong.com/md/html/03-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_3-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BB%8B%E7%BB%8D">#</a>3. 基础知识介绍</h2><ul><li>常用的颜色表示法<ol><li>直接使用颜色英文名 （缺点颜色不好描述出来）<ul><li>比如red，orange yellow &#x2F;。。。。</li></ul></li><li>rgb值设置<ul><li>rgb通过三种颜色不同的浓度来调配不同的颜色</li><li>r red g green b blue</li><li>颜色的范围是 0 - 255 也可以设置成百分比</li><li>语法 rgb（红，绿，蓝）</li></ul></li><li>rgba<ul><li>跟rgb一样多了一个a</li><li>a代表透明度 0-1</li></ul></li><li>十六进制的rgb值<ul><li>语法。 #红色绿色蓝色</li><li>颜色浓度通过 00 - ff 来设置</li><li>如果颜色两位两位重复可以简写</li><li>#aabbcc — #abc</li></ul></li><li>HSL 值 HSLA<ul><li>H 色相 （ 0 - 360 相当于一个圆形）</li><li>S 饱和度 （0% - 100%）0就是灰色设置啥都不好使</li><li>L 亮度 （0% - 100%） 0 黑色 100 白色</li></ul></li></ol></li><li>px 像素的简单介绍</li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html标签的用法</title>
      <link href="/2022/04/13/html%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2022/04/13/html%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="基础标签"><a href="#基础标签" class="headerlink" title="#基础标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE">#</a>基础标签</h1><h2 id="1-认识HTML"><a href="#1-认识HTML" class="headerlink" title="#1. 认识HTML"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#_1-%E8%AE%A4%E8%AF%86html">#</a>1. 认识HTML</h2><ul><li>HTML是Hyper Text Markup Language(超文本标记语言)的缩写，是构成Web页面的基本元素，是一种规范，一种标准。</li><li>HTML不是一种编程语言，而是一种描述性的标记语言，通过标识符来标识网页中内容的显示方式，例如图片的显示尺寸、文字的大小、颜色、字体等。</li><li>浏览器能够对这些标记进行解释，按照要求显示出文字、图像、动画、媒体等网页内容。</li><li>HTML5是HTML的一个版本，该版本新增与优化了很多内容。现今，几乎所有世面流行的浏览器都能很好的支持HTML5，所以，我们后面学习的知识都以HTML5作为标准。</li></ul><h2 id="2-网页基础知识"><a href="#2-网页基础知识" class="headerlink" title="#2. 网页基础知识"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#_2-%E7%BD%91%E9%A1%B5%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">#</a>2. 网页基础知识</h2><ul><li><p>HTML模板的基本含义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> <span class="comment">&lt;!--规定了浏览器文档使用哪种规范，以前需要在后面写上很长一串规范地址，现今HTML5规范无须额外指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span>&gt;</span> <span class="comment">&lt;!--所有网页最大的结构  网页中所有的标签存放在html标签中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span> <span class="comment">&lt;!--网页的头部  告诉浏览器一些相关的信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span> <span class="comment">&lt;!--表示网页编码格式 推荐UTF-8国际编码，常用的还有gbk国标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="comment">&lt;!--网页标题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span> <span class="comment">&lt;!--网页的主体  我们所看的网页结构 都是在body中的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>标签知识</p><ul><li>由 &lt;&gt; 包裹的关键词称为<strong>标签</strong></li><li>标签有<strong>单标签</strong>与<strong>双标签</strong>之分</li><li>&lt;&gt;之间除了标签名之外，还可以有 <code>属性=&quot;值&quot;</code> 的各种属性设置</li></ul></li><li><p>HTML的lang属性</p><ul><li>主要用于决定浏览器是否自动弹出翻译框</li><li>常用值 <code>en</code> ，代表网页是一个英文网页（不管你后续写的内容是不是英文），浏览器打开该网页<strong>会</strong>弹出翻译提示框</li><li>常用值 <code>zh-cn</code>，代表网页是一个中文网页，浏览器打开该网页<strong>不会</strong>弹出翻译提示框</li><li>所以，如果你网页主要服务于国内用户，值选择 <code>zh-cn</code></li></ul></li><li><p>结构与样式</p><ul><li>结构：body中书写的内容会展示在浏览器可视区中，每个标签都有默认的样式</li><li>样式：通过编写css代码可以改变各个内容的样式</li></ul><p>我们学习的路线是<strong>先学习结构</strong>部分的各种标签，<strong>再学习css</strong>改变样式。</p></li><li><p>前端代码书写规范</p><ul><li>标签、属性名以及相关符号书写均在英文半角状态下的小写</li><li>养成写注释的好习惯 <code>&lt;!--注释--&gt;</code></li><li>id、class必须以字母开头</li><li>所有双标签必须闭合</li><li>根据层次结构对标签进行tab缩进</li><li>属性值必须带引号，单双引号都可以，根据你们团队的开发规范来</li></ul></li></ul><h2 id="3-认识标签"><a href="#3-认识标签" class="headerlink" title="#3. 认识标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#_3-%E8%AE%A4%E8%AF%86%E6%A0%87%E7%AD%BE">#</a>3. 认识标签</h2><p>HTML规范中有很多很多的标签，常用的标签并不多。</p><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="#meta标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#meta%E6%A0%87%E7%AD%BE">#</a>meta标签</h3><p>meta标签写在head标签中，是一个辅助标签，根据属性不一样所表示的含义也不一样，常用的有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;关键词1 关键词2&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页的描述&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&#x27;X-UA-Compatible&#x27;</span> <span class="attr">content</span>=<span class="string">&#x27;IE=edge,chrome=1&#x27;</span>&gt;</span></span><br><span class="line">  根据当前浏览器类型强制以特定内核进行渲染，如果是IE浏览器则使用最新内核，如果是双核浏览器则使用chrome内核。IE7及以下版本不支持这个属性。</span><br><span class="line"></span><br><span class="line">- 更多meta的作用可在对前端有一定了解后自行探索</span><br></pre></td></tr></table></figure><h3 id="div标签"><a href="#div标签" class="headerlink" title="#div标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#div%E6%A0%87%E7%AD%BE">#</a>div标签</h3><p>div标签用于将文档划分为独立的、不同的部分，从而构成一个完整的网页。网页的主体骨架一般由div标签搭建（HTML5标准中有很多新标签也可代替div搭建骨架），每一个单独的div模块中也可继续用div搭建局部的骨架。</p><p><em>Tip：结合英文单词更好理解哦！ division 分开；分隔。</em></p><h3 id="H系列标题标签"><a href="#H系列标题标签" class="headerlink" title="#H系列标题标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#h%E7%B3%BB%E5%88%97%E6%A0%87%E9%A2%98%E6%A0%87%E7%AD%BE">#</a>H系列标题标签</h3><p>h1~h6标签用于表示网页内容的标题，标签中的文字默认会出现不同程度的加粗与增大。</p><p>在一个网页中<strong>h1标签最好是有且仅有一个</strong>（有利于SEO优化），其他h标签可以根据需要出现多次。</p><p><em>Tip：结合英文单词更好理解哦！ heading (页首或章节开头的)标题。</em></p><h3 id="排序标签"><a href="#排序标签" class="headerlink" title="#排序标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E6%8E%92%E5%BA%8F%E6%A0%87%E7%AD%BE">#</a>排序标签</h3><ul><li><p>ul无序列表标签</p><p>ul标签用于展示无序的列表内容，<strong>规范上，其子标签必须是li</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--举例：展示新闻信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>31省市区新增确诊15例<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>DWG战队获得S10全球总决赛冠军<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>拜登当选新一任美国总统<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2020天猫双11成交额4982亿<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ul列表前默认有实心圆点符号，可以通过修改type属性来改变这个符号（但是更推荐通过css来对其进行修改，这样更符合结构与样式分离的理念，后续学习中再介绍通过css来改变的写法）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">type=&quot;disc&quot; 实心圆点</span></span><br><span class="line"><span class="comment">type=&quot;circle&quot; 空心圆点</span></span><br><span class="line"><span class="comment">type=&quot;square&quot; 实心方块</span></span><br><span class="line"><span class="comment">type=&quot;none&quot; 不显示符号</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;circle&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>31省市区新增确诊15例<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>DWG战队获得S10全球总决赛冠军<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>拜登当选新一任美国总统<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2020天猫双11成交额4982亿<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>Tip：结合英文单词更好理解哦！unordered list 美 [ʌnˈɔrdərd lɪst] 不排序的列表。</em></p></li><li><p>ol有序列表标签</p><p>ol标签用于展示有序的列表内容，<strong>规范上，其子标签必须是li</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>打开冰箱门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>将大象放进冰箱<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>关上冰箱门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ol列表前默认有数字符号，可以通过修改type属性来改变这个符号（同上，更推荐使用css来改变）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">type=&quot;1&quot; 数字顺序</span></span><br><span class="line"><span class="comment">type=&quot;A&quot; 或者 type=&quot;a&quot; 字母顺序</span></span><br><span class="line"><span class="comment">type=&quot;I&quot; 或者 type=&quot;i&quot; 罗马数字顺序</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>打开冰箱门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>将大象放进冰箱<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>关关上冰箱门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><em>Tip：结合英文单词更好理解哦！ordered list 美 [ˈɔːrdərd lɪst] 有序表。</em></p><ul><li><p>dl dt dd定义标签</p><p>dl标签用于对某个或某几个项目做出解释，<strong>规范上，必须配合dt（定义列表中的项目） dd（描述列表中的项目）来使用</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>计算机<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>用来计算的仪器 ... ...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>显示器<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>以视觉方式显示信息的装置 ... ...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>Tip：结合英文单词更好理解哦！ definition list 美 [ˌdefɪˈnɪʃn lɪst] 定义表。</em></p><p><em>definition term 美 [ˌdefɪˈnɪʃn tɜːrm] 定义项</em></p><p><em>definition description 美 [ˌdefɪˈnɪʃn dɪˈskrɪpʃn] 定义说明</em></p></li></ul><p><strong>所有的列表项目中不一定只能写文字，可以结合其他标签来表示项目。</strong></p><p>各个列表之间允许互相嵌套。</p><h3 id="p段落标签"><a href="#p段落标签" class="headerlink" title="#p段落标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#p%E6%AE%B5%E8%90%BD%E6%A0%87%E7%AD%BE">#</a>p段落标签</h3><p>p标签中通常用来放置一段文字。<strong>注意：p标签中不可以放div标签(任意块标签)，这会导致在浏览器中p标签被分隔成两个</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>被那迎面而来的温热香风吹在脸庞上，萧炎有着瞬间的失神，狠狠的甩了甩头，将心中的旖念压下，手掌拍了拍面前几乎和自己同样身高的少女的小脑袋，无奈的道：“你就不能让我说出来，也好满足一下我的虚荣心么？”<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>Tip：结合英文单词更好理解哦！paragraph 美 [ˈpærəɡræf] 段落。</em></p><h3 id="span标签"><a href="#span标签" class="headerlink" title="#span标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#span%E6%A0%87%E7%AD%BE">#</a>span标签</h3><p>span标签通常用于包裹文字，视觉上不会产生任何变化，但是我们可以配合css添加特殊的样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>让span包裹的文字<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span>变红色<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="a标签-–-超链接"><a href="#a标签-–-超链接" class="headerlink" title="#a标签 – 超链接"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#a%E6%A0%87%E7%AD%BE-%E8%B6%85%E9%93%BE%E6%8E%A5">#</a>a标签 – 超链接</h3><p>a标签最常用于形成一个可点击的<strong>超链接</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>点我跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过添加<code>target</code>属性可以指定打开链接的位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">target=&quot;_blank&quot; 新标签页打开</span></span><br><span class="line"><span class="comment">target=&quot;_new&quot; 新标签页打开，但所有的new只会打开一个新标签页</span></span><br><span class="line"><span class="comment">target=&quot;_self&quot; 默认，在当前标签页打开</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点我跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="a标签-–-锚点"><a href="#a标签-–-锚点" class="headerlink" title="#a标签 – 锚点"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#a%E6%A0%87%E7%AD%BE-%E9%94%9A%E7%82%B9">#</a>a标签 – 锚点</h3><p>a标签还常用与创建锚点链接，用于在当前页面跳转到指定位置：</p><p>（讲解标签的id命名方式）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#wrap&quot;</span>&gt;</span>点我页面滚动到id为wrap的标签所在的位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>锚点也可以配合name属性使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#abc&quot;</span>&gt;</span>点我页面滚动到name为abc的标签位置&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;abc&quot;</span>&gt;</span>滚到这里<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>Tip：结合英文单词更好理解哦！ anchor 美 [ˈæŋkər] 锚。</em></p><h3 id="img标签"><a href="#img标签" class="headerlink" title="#img标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#img%E6%A0%87%E7%AD%BE">#</a>img标签</h3><p>img标签用于在网页中引入一张图片：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>img是一个单标签，不需要结束标签，但是我们可以用 <code>/</code> 作为img的结尾：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">两种写法都可以</span></span><br><span class="line"><span class="comment">在HTML5的新标准中，明确的指出了不需要 / 来结束单标签，所以，更推荐大家不写/</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>img标签的四个重要属性：</p><ul><li><p>src</p><p>用于指定图片路径，路径的写法有：</p><ul><li><p>相对路径</p><p>以 <code>./</code> 或者 <code>../</code> 开头（详细讲解），或者直接以文件名或目录名开头。</p></li><li><p>绝对路径</p><p>一个从根目录出发的路径或者一个完整的网络地址。</p></li></ul><p>所有写路径的地方都适用相对路径和绝对路径的写法，比如上面讲过的a标签herf属性。</p></li><li><p>width与height</p><p>用于指定img显示的大小，书写了这两个属性之后，网页加载时能够为img图片预留对应的空间从而不会影响其他布局。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>width与height一般情况下和图片原始尺寸保持一致（像素单位的简单介绍），不过不一致也是允许的，但是即使使用width和height缩小图片，也仅仅是视觉上的缩小，浏览器还是需要加载原始的图片资源（并不能减轻请求压力），所以当我们有图片缩放的需求时，应当提前用图片处理软件处理好了之后，再引入图片。</p></li><li><p>alt属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">href</span>=<span class="string">&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1605197183333&amp;di=087c5c556d4151b324e5485ad280d29a&amp;imgtype=0&amp;src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20180705%2F142fb8fac6f846a995bf9951bc604e92.jpeg&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">alt</span>=<span class="string">&quot;新垣结衣&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure><p>主要用于告知搜索引擎当前图片表示的意思。</p><p>同时当img的src地址出错时，alt属性的值能够显示出来，以至于让用户得到一个相对来说不那么糟糕的体验。</p></li></ul><p>除上述四条属性之后，img中常用的属性还有 <code>title</code> ，当鼠标指针移动到图片上时，title能够显示出提示文字，增强用户体验。<code>title</code>属性并不仅仅用于img标签，其他常见的标签都可以使用<code>title</code>。</p><p><em>Tip：结合英文单词更好理解哦！ image 美 [ˈɪmɪdʒ] 图像。</em></p><h3 id="其他常用标签"><a href="#其他常用标签" class="headerlink" title="#其他常用标签"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE">#</a>其他常用标签</h3><ul><li><p>b标签 strong标签</p><p>文字加粗，b标签仅为视觉上的加粗，strong还能够被搜索引擎检索。</p></li><li><p>i标签 em标签</p><p>文字斜体，i标签仅为视觉上的斜体，em还能够被搜索引擎检索。</p></li><li><p>br标签</p><p>用于文本换行。</p></li><li><p>hr标签</p><p>横线分隔。</p></li><li><p>sup标签、sub标签</p><p>上角标、下角标。</p></li><li><p>del标签</p><p>删除线。</p></li><li><p>pre标签</p><p>预格式化，按照编辑器中文字摆放格式来显示文字。</p></li></ul><h2 id="4-特殊符号"><a href="#4-特殊符号" class="headerlink" title="#4. 特殊符号"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#_4-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7">#</a>4. 特殊符号</h2><p>在HTML书写某些特殊字符的时候，可能会遇到问题，比如要在网页里面显示出字符 &lt; &gt;，就有可能和我们的标签冲突，所以有些特殊字符需要用对应代替的写法（<em>字符实体</em>）表示：</p><p>&lt; &gt; 使用 <code>&lt;</code> 和 <code>&gt;</code> 代替</p><p>连续的空格会被忽略，如果确实需要连续空格，使用 <code> </code> 代替</p><p>更多符号请参考：<a href="http://www.w3school.com.cn/tags/html_ref_entities.html">HTML实体符号手册 (opens new window)</a>；</p><p>很多特殊字符即使不用实体符号也不会出错，但是在键盘上打出这些符号有点困难，实体符号存在的意义就是为这些字符提供替代的输入方式。</p><h2 id="5-语义化"><a href="#5-语义化" class="headerlink" title="#5. 语义化"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#_5-%E8%AF%AD%E4%B9%89%E5%8C%96">#</a>5. 语义化</h2><p>通过上面标签的学习，我们发现每个标签其实对应的都有英文原单词，也就是说HTML的标签具备对应的单词的意思与作用，这就称之为HTML标签的语义化。</p><p>HTML为何要语义化？</p><ul><li>在没有添加样式的情况下也能看出网页大致的结构</li><li>有利于SEO</li><li>增强用户体验</li><li>有利于团队协作</li><li>……</li></ul><p>所以我们在编写HTML代码的时候，也要遵循语义化，不能随性而为。比如要放置一段文字，就应该用p标签而不是div标签。要展示某个有先后顺序的步骤文本，就应该使用ol标签而不是ul标签。</p><h2 id="√-作业与练习"><a href="#√-作业与练习" class="headerlink" title="#√. 作业与练习"></a><a href="https://kejian.zzhitong.com/md/html/02-%E5%9F%BA%E7%A1%80%E6%A0%87%E7%AD%BE%EF%BC%882%E8%AF%BE%E6%97%B6%EF%BC%89.html#%E2%88%9A-%E4%BD%9C%E4%B8%9A%E4%B8%8E%E7%BB%83%E4%B9%A0">#</a>√. 作业与练习</h2><ul><li>使用编辑器创建一个HTML文档，书写一遍已经学习的各种标签案例。</li></ul>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello </title>
      <link href="/2022/04/13/hello-world/"/>
      <url>/2022/04/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解html的来历</title>
      <link href="/2022/04/13/html%E7%9A%84%E5%8F%91%E5%B1%95/"/>
      <url>/2022/04/13/html%E7%9A%84%E5%8F%91%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前端发展史"><a href="#1-前端发展史" class="headerlink" title="#1. 前端发展史"></a><a href="https://kejian.zzhitong.com/md/html/01-%E5%BC%80%E7%8F%AD%EF%BC%881%E8%AF%BE%E6%97%B6%EF%BC%89.html#_1-%E5%89%8D%E7%AB%AF%E5%8F%91%E5%B1%95%E5%8F%B2">#</a>1. 前端发展史</h2><ul><li>1994 年 前端历史的起点 1994.10.13 网景公司推出<strong>Navigator</strong> 最早期的浏览器原型</li><li>1994年 <strong>Berners-Lee ([蒂姆·伯纳斯 李]) 创建w3c</strong> ，哈肯·维姆·莱 发布css 都是w3c组织的，同事为动态web网页设计的服务端脚本php发发布</li><li>万维网 是欧洲核子援救组织的一帮科学家为了方便看文档、传论文而创造的，这就是为什么Web网页都基于Document。Document就是用标记语言+超链接写成的由文字和图片构成的HTML页面，这样的功能已经完全满足学术交流的需要，所以网页的早期形态和Document一样，完全基于HTML页面，并且所有内容都是静态的    </li><li>早起网页的缺点：<ol><li>所以的网页都基于html页面，因为没有任何手段可以控制局部内容的显示和隐藏，因此任何局部的变化哪怕只多出一个标点符号，都只能重新下载一个新的页面。</li><li>计算任务只能在服务端实现。由于网速限制，与服务器通信的过程是非常缓慢的，并且此过程是同步阻塞的，于是会出现这样的场景：用户提交一个表单，然后整个页面消失，浏览器呈现白屏，经过漫长的等待，浏览器渲染出一个和之前一模一样的页面，只不过输入框旁边多了一排红色小字：用户名错误。</li><li>所有页面都是静态的，这意味着一个电商网站有一千种商品，哪怕页面布局一模一样，也必须写一千个单独的页面。</li></ol></li><li>早期网页形态低下的效率是无法仅仅通过提高网速解决的。</li><li>1994年一个叫Rasmus Lerdorf的加拿大人为了维护个人网站而创建了PHP。PHP原意是Personal Home Page，宣传语是Hypertext Preprocessor（超文本处理者）。PHP实现了与数据库的交互以及用于生产动态页面的模板引擎，是Web领域中最主流的服务端语言。</li><li>1995年网景推出了JavaScript，实现了客户端的计算任务（如表单验证）。</li><li>1996年微软推出了iframe标签，实现了异步的局部加载。</li><li>1999年W3C发布第四代HTML标准，同年微软推出用于异步数据传输的ActiveX，随即各大浏览器厂商模仿实现了XMLHttpRequest。这标识着Ajax的诞生，但是Ajax这个词是在六年后问世的，特别是在谷歌使用Ajax技术打造了Gmail和谷歌地图之后，Ajax获得了巨大的关注。Ajax是Web网页迈向Web应用的关键技术，它标识着Web2.0时代的到来。ActiveX 是一个开放的集成平台，为开发人员、 用户和 Web生产商提供了一个快速而简便的在 Internet 和 Intranet 创建程序集成和内容的方法。 使用 ActiveX, 可轻松方便的在 Web页中插入 多媒体效果、 交互式对象、以及复杂程序，创建用户体验相当的高质量多媒体CD-ROM 。</li><li>2006年，XMLHttpRequest被W3C正式纳入标准。至此，早期的Document（文档）终于进化为了Web page（网页），上述三个局限都得到了妥善的解决。(C&#x2F;S 结构 Client 客户端&#x2F;Server 服务器B&#x2F;S 结构 Browser 浏览器&#x2F;Server 服务器)</li><li>从后端走向前端</li><li>早期的网页开发是由后端主导的，前端能做的也就是操作一下DOM。</li><li>2006年 John Resig发布了jQuery，jQuery主要用于操作DOM，其优雅的语法、符合直觉的事件驱动型的编程思维使其极易上手，因此很快风靡全球，大量基于jQuery的插件构成了一个庞大的生态系统，更加稳固了jQuery作为JS库一哥的地位。</li><li>起初制约Web开发从后到前的因素很简单，就是前端很多事干不了或干不好，当时的浏览器性能弱，标准化程度低。特别是占据大量市场份额的IE，不仅丑陋，并且bug多。</li><li>于2008年问世的谷歌V8引擎改变了这一局面。现代浏览器的崛起终结了微软的垄断时代，前端的计算能力一下子变得过剩了。标准组织也非常配合的在2009年发布了第五代JavaScript，前端的装备得到了整体性的提高，前端界如同改革开放走进了一个令人目不暇接的新时代。V8就是chrome浏览器用的js解释引擎，主要是C编写的2009年AngularJS诞生，随后被谷歌收购。</li><li>2010年backbone.js诞生。</li><li>2011年React和Ember诞生。</li><li>2014年Vue.js诞生……前后端分离可谓大势所趋。后端只负责数据，前端负责其余工作，这种分工模式一定是更清晰也更高效的。随着基础设置的不断完善以及代码封装层级的不断提高，使得前端一个人能够完成的事越来越多，这是技术积累的必然结果。就好像今天高中生的知识水平，可能远远超过五百年前的科学家，今天要成为Web全栈工程师，门槛也只会越来越低。</li><li>2014年，第五代HTML标准发布。H5是由浏览器厂商主导，与W3C合作制定的一整套Web应用规范，至今仍在不断补充新的草案。我们可以清晰的感受到这一系列规范背后隐含的领导者的勃勃雄心：占领所有屏幕。</li><li>从前端走向全端</li><li>2009年Ryan Dahl发布了node.JS，node是一个基于V8引擎的服务端JavaScript运行环境，类似于一个虚拟机，也就是说js在服务端语言中有了一席之地。如果说ajax是前端的第一次飞跃，那么node可算作前端的第二次飞跃。它意味着JavaScript走出了浏览器的藩篱，迈出了全端化的第一步。</li><li>一种流行的组合就是利用Express和Mongo搭建服务端程序。</li><li>Web开疆拓土的步伐并不止于此。2007年第一代iphone发布，2008年第一台安卓手机发布。悄然间互联网进入了移动时代。移动端的发展进程和PC的历史如出一辙，一开始都是Native App的天下。但浏览器试图取代操作系统的篡位之心从未消减。相比原生应用，Web APP有太多好处：无须开发两套系统版本、无须安装、无须手动升级、无须审核……我认为最大的好处以及驱动软件形态转向的主要原因在于降低成本，记得13年的时候韩寒说做一个APP大概需要五十万，今天网上比较靠谱的分析评估半年时间从零做出一个稍微像样的APP至少100万，而开发Web App花的钱一定少得多。<ul><li><a href="https://link.juejin.im/?target=http://www.woshipm.com/pd/123646.html">Web App、Hybrid App与Native App的设计差异(opens new window)</a></li><li><a href="https://link.juejin.im/?target=http://www.cnblogs.com/yexiaochai/p/4921635.html%233798856">浅谈Hybrid技术的设计与实现(opens new window)</a></li></ul></li><li>制约Web App的因素有很多，但我们可以看到Web App一直在不断修复缺陷、突破局限。你说网页有tab bar，好吧，给你个fullpage API，你说网页不能调取系统功能，好吧，Geolocation API、Vib ration API、Luminosity API、Orientation API、Camera API……你说网页不像APP有图标，IOS早就支持在桌面上添加网页链接的快捷图标，还得是乔帮主远见；你说网页必须联网，现在离线的方案也很多啊；你说Web App性能差，这个……你说得对，也就是这个原因，Native App还能作为主流存在一段时间，可是如果Web App的性能逐渐赶上Native了呢？目前的Hybrid、nw.js、Electron、react native、weex等都可以看做Web App在性能方面向Native靠近的尝试。更何况半路又杀出个微信小程序。</li><li>前端涉及到的领域: pc(移动端)网站，小程序，html5游戏, 公众号开发,   管理系统,  web app, 桌面应用（Electron), 人工智能(数学基础好,统计学)</li><li>设想：科技就是为人类服务的，就算工程师是超人，但其本质也是人类。所以人类会从最开始01的二进制语言，到汇编语言，到今天的越来越高级越来越自然的开发语言，计算机也是从裸机被越来越简单的操作系统，应用软件一层一层所封装。所以开发应该也是会类似，困难的、反人性的部分应该会不断的被封装，从而去不断的追求低成本，高效率，高兼容性，高安全性，更加接近业务层。</li></ul>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2022/04/13/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/"/>
      <url>/2022/04/13/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello hexo&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
